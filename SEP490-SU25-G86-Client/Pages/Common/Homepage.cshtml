@page
@model SEP490_SU25_G86_Client.Pages.HomepageModel
@{
    var token = HttpContext.Request.Query["token"];
}
<script>
    const urlToken = '@token';
    if (urlToken && urlToken !== 'null' && urlToken !== '') {
        localStorage.setItem('jwt_token', urlToken);
        // Xóa token khỏi url bằng cách reload lại không query
        window.location.href = window.location.pathname;
    }
</script>
@{
    var selectedRegion = HttpContext.Request.Query["region"].ToString()?.Trim();

}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>CVMatcher - Homepage</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
@*     <link rel="stylesheet" href="~/SEP490_SU25_G86_Client.styles.css" asp-append-version="true" /> *@
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/logoA.css" asp-append-version="true" />

</head>
<body>
    <!-- Hero Search Section -->
    <section class="hero-section text-center">
        <div class="content-wrapper">
            <!-- Tiêu đề -->
            <h2 class="fw-bold">
                Tìm việc làm nhanh 24h, việc làm mới nhất trên toàn quốc
            </h2>

            <!-- Form tìm kiếm -->
            <form method="get" action="/Common/ListJobs" class="d-flex bg-white shadow"
                  style="border-radius: 8px; overflow: hidden; max-width: 970px; margin: 40px auto 0;">

                <!-- Job title input -->
                <input name="keyword" type="text" class="form-control border-0 px-3"
                       placeholder="Vị trí tuyển dụng" style="flex: 0 0 65%;" />

                <!-- Vertical divider -->
                <div style="width:1px; background-color:#dee2e6;"></div>

                <!-- Location dropdown -->
                <select class="form-select border-0 px-3 searchable-select" name="provinceId" style="flex: 0 0 20%; height: 40px; border-radius: 4px;">
                    <option selected value="">Vị trí</option>
                    @foreach (var province in Model.Provinces)
                    {
                        <option value="@province.ProvinceId">@province.ProvinceName</option>
                    }
                </select>

                <!-- Search button -->
                <button type="submit" class="btn btn-custom text-white px-3"
                        style="flex: 0 0 15%; border-radius: 0;">
                    <i class="bi bi-search me-1"></i> Tìm kiếm
                </button>
            </form>

            <!-- Categories + Slider -->
            <div class="row mx-auto mt-5" style="max-width: 1010px; min-height: 300px;">
                <!-- Cột ngành nghề -->
                <div class="col-lg-3">
                    <div class="category-list p-3 bg-white shadow">
                        <ul id="industry-category-list" class="list-unstyled m-0"></ul>

                        <!-- Pagination -->
                        <div class="category-footer">
                            <div class="category-pagination">
                                <button class="prev-btn">&lsaquo;</button>
                                <button class="next-btn">&rsaquo;</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Slider -->
                <div class="col-lg-9 d-flex">
                    <div id="jobSlider" class="carousel slide shadow custom-slider" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <a href="/Common/ListJobs">
                                    <img src="https://i.ibb.co/BVxck9fJ/Slider.png"
                                         class="d-block w-100 h-100" alt="Banner 1">
                                </a>
                            </div>

                            <div class="carousel-item">
                                <a href="/Companies/ListCompany">
                                    <img src="https://i.ibb.co/dw5QWWmd/company-Banner.png"
                                         class="d-block w-100 h-100" alt="Banner 1">
                                </a>
                            </div>
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#jobSlider" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon"></span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#jobSlider" data-bs-slide="next">
                            <span class="carousel-control-next-icon"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Job Listings -->
    <section class="py-5 custom-bg">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold">Việc Làm Mới Nhất</h2>
                @* <span>@Model.TotalItems công việc</span> *@
                <a href="/Common/ListJobs" class="text-custom">Xem tất cả</a>
            </div>

            <!-- Filters -->
            <div class="d-flex gap-2 mb-4 flex-wrap align-items-start">
                <div class="filter-dropdown-wrapper position-relative">
                    <button id="filterToggle" class="btn filter-btn d-flex align-items-center justify-content-between" type="button" aria-expanded="false">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-filter me-2 text-muted"></i>
                            <span class="text-muted me-2">Lọc theo:</span>
                            <span id="selectedFilterLabel" class="fw-semibold">Vị trí</span>
                        </div>
                        <i id="filterCaret" class="bi bi-chevron-down caret-icon"></i>
                    </button>

                    <div id="filterMenu" class="custom-filter-menu shadow-sm" role="menu" aria-hidden="true">
                        <button class="dropdown-item d-flex justify-content-between align-items-center" data-value="region">Địa điểm <i class="bi bi-check"></i></button>
                        <button class="dropdown-item d-flex justify-content-between align-items-center" data-value="salary">Mức lương <i class="bi bi-check"></i></button>
                        <button class="dropdown-item d-flex justify-content-between align-items-center" data-value="experience">Kinh nghiệm <i class="bi bi-check"></i></button>
                    </div>
                </div>

                <div id="dynamicFilters" style="min-width: 300px;"></div>
            </div>

            @if (!Model.JobPosts.Any())
            {
                <p class="text-muted">Hệ thông đang cập nhật</p>
            }
            else
            {
                <div class="row">
                    @foreach (var job in Model.JobPosts)
                    {
                        <div class="col-md-4 mb-4 d-flex">
                            <div class="card job-card shadow-sm rounded-4 p-3 w-100">
                                <div class="d-flex align-items-center">
                                    <!-- Logo công ty -->
                                    <img src="@job.CompanyLogoUrl"
                                         alt="@job.CompanyName"
                                         class="rounded"
                                         style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;"
                                         onclick="window.location.href='/Common/CompanyDetail?id=@job.CompanyId'">

                                    <!-- Thông tin công việc -->
                                    <div class="ms-3 flex-grow-1">
                                        <h5 class="fw-bold mb-1">
                                            <a href="/Job/DetailJobPost/@job.JobPostId" class="fw-bold mb-1">
                                                @job.Title
                                            </a>
                                        </h5>
                                        <p class="mb-1">
                                            <a href="/Common/CompanyDetail?id=@job.CompanyId"
                                               class="text-muted text-decoration-none">
                                                @job.CompanyName
                                            </a>
                                        </p>
                                        <p class="text-muted mb-0">@job.Location</p>
                                    </div>
                                </div>

                                <!-- Lương & nút Chi tiết -->
                                <div class="d-flex align-items-center justify-content-between mt-3">
                                    <span class="text-custom fw-bold">@job.Salary</span>
                                    <a class="btn btn-custom btn-sm btn-fixed" href="/Job/DetailJobPost/@job.JobPostId">Chi tiết</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-center mt-4">
                    <nav>
                        <ul class="pagination">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=@(Model.CurrentPage - 1)@(Model.Region != null ? $"&region={Model.Region}" : "")">←</a>
                                </li>
                            }

                            <li class="page-item disabled">
                                <span class="page-link">@Model.CurrentPage / @Model.TotalPages</span>
                            </li>

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=@(Model.CurrentPage + 1)@(Model.Region != null ? $"&region={Model.Region}" : "")">→</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
    </section>


    <!-- Popular Categories -->
    <section class="bg-white py-5">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold m-0">Nghề nghiệp phổ biến</h2>
                <div>
                    <button id="prevPage" class="btn-page me-2">‹</button>
                    <button id="nextPage" class="btn-page">›</button>
                </div>
            </div>

            <div id="industry-list" class="row g-3"></div>
        </div>
    </section>
    <h2 class="fw-bold m-0">Các công ty nổi bật</h2>
    <!--Logo công ty-->
    <div class="logo-flow">
        <div class="logos">
            @* <img src=https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRRRZt9HtUTldMpDPN79016PswZFSBQXgrkFQ&s" alt="" class="hplogo">
            <img src="https://play-lh.googleusercontent.com/Shy9VB3CKUYUzyzcuJwmDiYZElFJsKYwj5v5X2s3fGfIlL6SzkbAz_sMX6ZX9Sk8JQ" alt="" class="hplogo">
            <img src="https://yte.viettel.vn/upload/1000337/20210118/Viettel-without_slogan-01_34bf1bf614.png" alt="" class="hplogo">
            
            <!-- Duplicate toàn bộ logo để scroll liên tục -->
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRRRZt9HtUTldMpDPN79016PswZFSBQXgrkFQ&s" alt="" class="hplogo">
            <img src="https://play-lh.googleusercontent.com/Shy9VB3CKUYUzyzcuJwmDiYZElFJsKYwj5v5X2s3fGfIlL6SzkbAz_sMX6ZX9Sk8JQ" alt="" class="hplogo">
            <img src="https://yte.viettel.vn/upload/1000337/20210118/Viettel-without_slogan-01_34bf1bf614.png" alt="" class="hplogo"> *@
            
        </div>
    </div>
    <!-- Bootstrap JS CDN -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

</body>
@section Scripts {
<script>
    //script filter cho jobpost
    document.addEventListener("DOMContentLoaded", function () {
        const filterToggle = document.getElementById("filterToggle");
        const filterMenu = document.getElementById("filterMenu");
        const selectedLabel = document.getElementById("selectedFilterLabel");
        const dynamicFilters = document.getElementById("dynamicFilters");
        const urlParams = new URLSearchParams(window.location.search);

        // Dữ liệu từ server
        const selectedRegion = '@Html.Raw((Model.Region ?? "").Normalize())'.trim();
        const selectedSalaryId = '@Model.SalaryRangeId';
        const selectedExperienceId = '@Model.ExperienceLevelId';

        const regionButtonsHtml = `
            <div id="regionButtons" class="d-flex gap-2 flex-wrap">
                <a class="btn ${selectedRegion === "" ? "btn-custom-selected" : "btn-outline-secondary"}" href="?filter=region&region=">Ngẫu nhiên</a>
                <a class="btn ${selectedRegion === "Bắc" ? "btn-custom-selected" : "btn-outline-secondary"}" href="?filter=region&region=Bắc">Miền Bắc</a>
                <a class="btn ${selectedRegion === "Trung" ? "btn-custom-selected" : "btn-outline-secondary"}" href="?filter=region&region=Trung">Miền Trung</a>
                <a class="btn ${selectedRegion === "Nam" ? "btn-custom-selected" : "btn-outline-secondary"}" href="?filter=region&region=Nam">Miền Nam</a>
            </div>
        `;

        const salaryOptions = [
            { text: "Tất cả", value: "" },
            { text: "Dưới 10 triệu", value: 1 },
            { text: "Từ 10-15 triệu", value: 2 },
            { text: "Từ 15-20 triệu", value: 3 },
            { text: "Từ 25-30 triệu", value: 4 },
            { text: "Trên 30 triệu", value: 5 }
        ];

        const experienceOptions = [
            { text: "Tất cả", value: "" },
            { text: "Không có kinh nghiệm", value: 1 },
            { text: "Dưới 1 năm", value: 2 },
            { text: "1 năm", value: 3 },
            { text: "2 năm", value: 4 },
            { text: "3 năm", value: 5 },
            { text: "4 năm", value: 6 },
            { text: "5 năm", value: 7 }
        ];

        function renderOptionButtons(options, paramName, selectedId) {
            let html = `<div class="d-flex gap-2 flex-wrap">`;
            options.forEach(opt => {
                const isSelected = (opt.value == selectedId || (opt.value === "" && !selectedId));
                const btnClass = isSelected ? "btn btn-custom-selected px-3" : "btn btn-outline-secondary px-3";

                const params = new URLSearchParams(window.location.search);
                if (opt.value === "") {
                    params.delete(paramName);
                } else {
                    params.set(paramName, opt.value);
                }

                html += `<a class="${btnClass}" href="?${params.toString()}">${opt.text}</a>`;
            });
            html += `</div>`;
            dynamicFilters.innerHTML = html;
        }

        function setActiveMenuItem(type) {
            filterMenu.querySelectorAll('.dropdown-item').forEach(btn => {
                btn.classList.toggle('active', btn.dataset.value === type);
            });
        }

        function loadFilterArea(type) {
            if (type === "region") {
                dynamicFilters.innerHTML = regionButtonsHtml;
            } else if (type === "salary") {
                renderOptionButtons(salaryOptions, "salaryRangeId", selectedSalaryId);
            } else if (type === "experience") {
                renderOptionButtons(experienceOptions, "experienceLevelId", selectedExperienceId);
            }
        }

        filterToggle.addEventListener("click", function (e) {
            e.stopPropagation();
            const isOpen = filterMenu.classList.toggle("show");
            filterToggle.classList.toggle("open", isOpen);
        });

        filterMenu.querySelectorAll(".dropdown-item").forEach(btn => {
            btn.addEventListener("click", function (e) {
                e.preventDefault();
                const type = this.dataset.value;
                selectedLabel.textContent = this.childNodes[0].textContent.trim();
                filterMenu.classList.remove("show");
                filterToggle.classList.remove("open");
                setActiveMenuItem(type);
                urlParams.set("filter", type);
                history.replaceState(null, '', `${window.location.pathname}?${urlParams.toString()}`);
                loadFilterArea(type);
            });
        });

        document.addEventListener("click", function (e) {
            if (!filterToggle.contains(e.target) && !filterMenu.contains(e.target)) {
                filterMenu.classList.remove("show");
                filterToggle.classList.remove("open");
            }
        });

        // Khởi tạo ban đầu
        let activeFilter = urlParams.get('filter') || 'region';
        const mapLabel = { region: 'Địa điểm', salary: 'Mức lương', experience: 'Kinh nghiệm' };
        selectedLabel.textContent = mapLabel[activeFilter];
        setActiveMenuItem(activeFilter);
        loadFilterArea(activeFilter);
    });
</script>

<script>
    //script gen các ngành + số lượng
    const API_BASE = "https://localhost:7004/api/industries/with-jobcount";
    let currentPage = 1;
    const pageSize = 8;
    let lastPage = false; // để xác định trang cuối

    function loadIndustries(page) {
        fetch(`${API_BASE}?page=${page}&pageSize=${pageSize}`)
            .then(res => res.json())
            .then(data => {
                const container = document.getElementById("industry-list");
                container.innerHTML = "";

                data.forEach(item => {
                    const col = document.createElement("div");
                    col.className = "col-6 col-md-3";
                    col.innerHTML = `
                    <a href="/Common/ListJobs?industryId=${item.industryId}" class="text-decoration-none">
                        <div class="industry-card">
                            <div class="industry-name">${item.industryName}</div>
                            <div class="industry-count">${item.jobPostCount.toLocaleString()} việc làm</div>
                        </div>
                     </a>
                    `;
                    container.appendChild(col);
                });

                // Cập nhật trạng thái nút
                document.getElementById("prevPage").disabled = (page === 1);
                lastPage = data.length < pageSize;
                document.getElementById("nextPage").disabled = lastPage;
            })
            .catch(err => console.error("Error loading industries:", err));
    }

    document.getElementById("prevPage").addEventListener("click", () => {
        if (currentPage > 1) {
            currentPage--;
            loadIndustries(currentPage);
        }
    });

    document.getElementById("nextPage").addEventListener("click", () => {
        if (!lastPage) {
            currentPage++;
            loadIndustries(currentPage);
        }
    });

    loadIndustries(currentPage);
</script>

<script>
    //script fill ngành ở mục chọn ngành
        document.addEventListener("DOMContentLoaded", function () {
        const API_BASE = "https://localhost:7004/api/industries/with-jobcount";
        let currentPage = 1;
        const pageSize = 8;
        let lastPage = false;

            function loadIndustryCategories(page) {
        fetch(`${API_BASE}?page=${page}&pageSize=${pageSize + 1}`)
            .then(res => res.json())
            .then(data => {
                const listEl = document.getElementById("industry-category-list");
                listEl.innerHTML = "";

                // Nếu trả về nhiều hơn pageSize thì chắc chắn có trang tiếp theo
                lastPage = data.length <= pageSize;

                // render chỉ pageSize item thôi
                data.slice(0, pageSize).forEach(item => {
                    const li = document.createElement("li");
                    li.innerHTML = `
                        <a href="/Common/ListJobs?industryId=${item.industryId}" class="text-decoration-none">
                            <span class="category-text">${item.industryName}</span>
                            <span class="arrow">&gt;</span>
                        </a>
                    `;
                    listEl.appendChild(li);
                });

                document.querySelector(".prev-btn").disabled = (page === 1);
                document.querySelector(".next-btn").disabled = lastPage;
            })
            .catch(err => console.error("Error loading industries:", err));
    }


        document.querySelector(".prev-btn").addEventListener("click", () => {
            if (currentPage > 1) {
                currentPage--;
                loadIndustryCategories(currentPage);
            }
        });

        document.querySelector(".next-btn").addEventListener("click", () => {
            if (!lastPage) {
                currentPage++;
                loadIndustryCategories(currentPage);
            }
        });

        loadIndustryCategories(currentPage);
    });
</script>

<script>
    //Script gen logo từ api
        document.addEventListener("DOMContentLoaded", async () => {
        const logosContainer = document.querySelector(".logos");

        try {
            const response = await fetch("https://localhost:7004/api/Company/get-all-logos");
            const data = await response.json();
                //Lấy dữ liệu từ api
                data.forEach((item, index) => {

                if (!item.logoUrl) return;
                const link = document.createElement("a");
                link.href = `/Common/CompanyDetail?id=${item.id}`;
                link.target = "_blank";
                link.style.display = "inline-block";

                // Áp margin-top cho 3 dòng
                const line = index % 3;
                if (line === 0) link.style.marginTop = "0px";       // dòng 1
                else if (line === 1) link.style.marginTop = "120px"; // dòng 2
                else link.style.marginTop = "240px";                 // dòng 3

                //Gen logo
                const img = document.createElement("img");
                img.src = item.logoUrl || "/path/to/default-logo.png";
                img.alt = `Company ${item.id}`;
                img.classList.add("hplogo");

                //Gán link vô ảnh
                link.appendChild(img);
                logosContainer.appendChild(link);
            });

            // Duplicate để scroll vô hạn
            const logos = Array.from(logosContainer.children);
            logos.forEach(el => {
                const clone = el.cloneNode(true);
                logosContainer.appendChild(clone);
            });

        } catch (err) {
            console.error("Error fetching logos:", err);
        }
    });
</script>

    <script>
               jQuery.noConflict();
        jQuery(document).ready(function($) {
            $('.searchable-select').select2({
                placeholder: "Vị trí",
                allowClear: false,
                dropdownCssClass: "custom-select2-dropdown"
            });
        });
    </script>

}
</html>