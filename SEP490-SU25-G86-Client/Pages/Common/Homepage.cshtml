@page
@model SEP490_SU25_G86_Client.Pages.HomepageModel
@{
    var token = HttpContext.Request.Query["token"];
}
<script>
    const urlToken = '@token';
    if (urlToken && urlToken !== 'null' && urlToken !== '') {
        localStorage.setItem('jwt_token', urlToken);
        // Xóa token khỏi url bằng cách reload lại không query
        window.location.href = window.location.pathname;
    }
</script>
@{
    var selectedRegion = HttpContext.Request.Query["region"].ToString();

}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>CVMatcher - Homepage</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
@*     <link rel="stylesheet" href="~/SEP490_SU25_G86_Client.styles.css" asp-append-version="true" /> *@
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />

</head>
<body>
    <!-- Hero Search Section -->
    <section class="bg-dark py-5">
        <div class="container mt-5">
            <form method="get" action="/Common/ListJobs" class="d-flex bg-white shadow"
                  style="border-radius: 8px; overflow: hidden; max-width: 900px; margin: auto;">

                <!-- Job title input -->
                <input name="keyword" type="text" class="form-control border-0 px-3"
                       placeholder="Vị trí tuyển dụng" style="flex: 0 0 65%;" />

                <!-- Vertical divider -->
                <div style="width:1px; background-color:#dee2e6;"></div>

                <!-- Location dropdown (mapped to provinceId) -->
                <select class="form-select border-0 px-3" name="provinceId" style="flex: 0 0 20%;">
                    <option selected value="">Vị trí</option>
                    @foreach (var province in Model.Provinces)
                    {
                        <option value="@province.ProvinceId">@province.ProvinceName</option>
                    }
                </select>

                <!-- Search button -->
                <button type="submit" class="btn btn-custom text-white px-3"
                        style="flex: 0 0 15%; border-radius: 0;">
                    <i class="bi bi-search me-1"></i> Tìm kiếm
                </button>
            </form>
        </div>
    </section>

    <!-- Job Listings -->
    <section class="bg-light py-5">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold">Việc Làm Mới Nhất</h2>
                <span>@Model.TotalItems jobs</span>
                <a href="/Common/ListJobs" class="text-custom">View all</a>
            </div>

            <!-- Filters -->
            <div class="d-flex gap-2 mb-4 flex-wrap">
                <select id="filterSelect" class="form-select" style="width: 200px; color: #6c757d; border: 1px solid #000;">
                    <option value="region">Vị trí</option>
                    <option value="salary">Mức lương</option>
                    <option value="experience">Kinh nghiệm</option>
                </select>

                <div id="dynamicFilters" class="d-flex flex-wrap gap-2 mt-2">
                    <div id="regionButtons">
                        <a class="btn @(string.IsNullOrEmpty(selectedRegion) ? "btn-custom-selected" : "btn-outline-secondary")" href="?region=">Ngẫu nhiên</a>
                        <a class="btn @(selectedRegion == "Bắc" ? "btn-custom-selected" : "btn-outline-secondary")" href="?region=Bắc">Miền Bắc</a>
                        <a class="btn @(selectedRegion == "Trung" ? "btn-custom-selected" : "btn-outline-secondary")" href="?region=Trung">Miền Trung</a>
                        <a class="btn @(selectedRegion == "Nam" ? "btn-custom-selected" : "btn-outline-secondary")" href="?region=Nam">Miền Nam</a>
                    </div>
                </div>
            </div>

            @if (!Model.JobPosts.Any())
            {
                <p class="text-muted">No job posts available.</p>
            }
            else
            {
                <div class="row">
                    @foreach (var job in Model.JobPosts)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card shadow-sm border-0 rounded-4 p-3">
                                <h5 class="fw-bold">@job.Title</h5>
                                <p class="text-muted mb-1">@job.CompanyName</p>
                                <p class="text-muted mb-1">@job.Location</p>
                                <div class="d-flex align-items-center justify-content-between mt-3">
                                    <span class="text-custom fw-bold">@job.FormattedSalary</span>
                                    <a class="btn btn-primary btn-sm" href="/Job/DetailJobPost/@job.JobPostId">Chi tiết</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="d-flex justify-content-center mt-4">
                    <nav>
                        <ul class="pagination">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=@(Model.CurrentPage - 1)@(Model.Region != null ? $"&region={Model.Region}" : "")">←</a>
                                </li>
                            }

                            <li class="page-item disabled">
                                <span class="page-link">@Model.CurrentPage / @Model.TotalPages</span>
                            </li>

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=@(Model.CurrentPage + 1)@(Model.Region != null ? $"&region={Model.Region}" : "")">→</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
    </section>


    <!-- Popular Categories -->
    <section class="bg-white py-5">
        <div class="container text-center">
            <h2 class="fw-bold mb-4">Nghề nghiệp phổ biến</h2>
            <div class="row g-3">
                @{
                    var categories = new[] {
                                "Chăm sóc khách hàng", "Marketing", "Kinh doanh - Bán hàng", "Bất động sản - Xây dựng",
                                "Khách sạn - Du lịch", "Giáo dục", "Tài chính - Ngân hàng", "Dịch vụ"
                                };
                    foreach (var cat in categories)
                    {
                        <div class="col-6 col-md-3">
                            <div class="border rounded py-3 bg-light fw-medium">
                                @cat
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </section>
    <!-- Bootstrap JS CDN -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</body>
<script>
    const filterSelect = document.getElementById("filterSelect");
    const dynamicFilters = document.getElementById("dynamicFilters");

    const salaryOptions = [
        "Tất cả", "Dưới 10 triệu", "Từ 10-15 triệu", "Từ 15-20 triệu",
        "Từ 25-30 triệu", "Trên 30 triệu"
    ];
    const experienceOptions = [
        "Tất cả", "Không có kinh nghiệm", "Dưới 1 năm", "1 năm",
        "2 năm", "3 năm", "4 năm", "5 năm"
    ];

    filterSelect.addEventListener("change", function () {
        dynamicFilters.innerHTML = ""; // Clear old buttons
        let options = [];

        if (this.value === "salary") options = salaryOptions;
        else if (this.value === "experience") options = experienceOptions;

        options.forEach(opt => {
            const btn = document.createElement("button");
            btn.className = "btn btn-outline-secondary";
            btn.innerText = opt;
            btn.type = "button";
            dynamicFilters.appendChild(btn);
        });
    });
</script>
</html>