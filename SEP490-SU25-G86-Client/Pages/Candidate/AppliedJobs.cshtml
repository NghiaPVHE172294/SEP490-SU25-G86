@page
@model SEP490_SU25_G86_Client.Pages.AppliedJobs.AppliedJobsModel
@{
    ViewData["Title"] = "Applied Jobs";
    var userId = HttpContext.Session.GetString("userId");
    var jwtToken = HttpContext.Session.GetString("jwt_token");
    var activeJobs = Model.AppliedJobs.Where(j => j.IsDelete == false || j.IsDelete == null).ToList();
}
<script>
    window.userId = '@userId';
    window.jwtToken = '@jwtToken';
</script>

<section class="container py-5">
    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2 class="h5 mb-0">Danh sách việc làm đã ứng tuyển</h2>
                    <select class="form-select w-auto">
                        <option>Trạng thái</option>
                        <option>Đã ứng tuyển</option>
                        <option>NTD xem hồ sơ</option>
                        <option>Hồ sơ phù hợp</option>
                        <option>Hồ sơ không phù hợp</option>
                    </select>
                </div>
                <div class="card-body">
                    @if (activeJobs.Any())
                    {
                        <div class="list-group">
                            @foreach (var job in activeJobs)
                            {
                                <div class="list-group-item list-group-item-action mb-3 rounded shadow-sm">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h5 class="mb-0">@job.Title</h5>
                                        <span class="badge @(job.Status == "OPEN" ? "bg-success" : "bg-danger")">@job.Status</span>
                                    </div>
                                    <p class="mb-1 text-muted"><strong>Địa điểm:</strong> @job.WorkLocation</p>
                                    <p class="mb-2 text-muted"><strong>Ngày ứng tuyển:</strong> @(job.SubmissionDate?.ToString("dd/MM/yyyy") ?? "N/A")</p>
                                    @if (job.CvId != null)
                                    {
                                        <div class="mb-2">
                                            <strong>CV đã nộp:</strong> <a href="@job.CvFileUrl" target="_blank">@job.CvName</a>
                                            @if (!string.IsNullOrEmpty(job.CvNotes))
                                            {
                                                <span class="text-muted small ms-2">(@job.CvNotes)</span>
                                            }
                                            <span class="badge bg-info ms-2">@job.SourceType</span>
                                        </div>
                                    }
                                    <a href="/job/details/@job.JobPostId" class="btn btn-primary btn-sm">Xem chi tiết</a>
                                    <button class="btn btn-warning btn-sm ms-2" onclick="openUpdateCvModal(@job.SubmissionId, @job.CvId)">Cập nhật CV</button>
                                    <button class="btn btn-danger btn-sm ms-2" onclick="withdrawApplication(@job.SubmissionId)">Rút đơn</button>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5 text-muted">
                            <p>Bạn chưa ứng tuyển công việc nào !</p>
                            <a href="/Common/ListJobs" class="btn btn-success mt-3">Tìm Việc Ngay</a>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Gợi ý việc làm phù hợp</h5>
                </div>
                <div class="card-body">
                    @if (Model.SuggestedJobs.Any())
                    {
                        @foreach (var job in Model.SuggestedJobs)
                        {
                            <div class="mb-3 p-2 border rounded d-flex align-items-center">
                                <div class="bg-light p-2 rounded me-3">
                                    <span class="text-success fw-bold">@job.Salary</span>
                                </div>
                                <div>
                                    <div class="fw-bold">@job.Title</div>
                                    <div class="text-muted small">@job.CompanyName</div>
                                </div>
                                <span class="ms-auto text-muted small">@job.Location</span>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-muted">Không có gợi ý việc làm phù hợp.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Modal cập nhật CV -->
<div class="modal fade" id="updateCvModal" tabindex="-1" aria-labelledby="updateCvModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="updateCvModalLabel">Cập nhật CV cho đơn ứng tuyển</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="updateCvForm">
          <input type="hidden" id="updateSubmissionId" />
          <div class="mb-3">
            <label for="selectNewCv" class="form-label">Chọn CV mới</label>
            <select class="form-select" id="selectNewCv">
              <!-- Option sẽ được load bằng JS -->
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
        <button type="button" class="btn btn-primary" id="btnUpdateCvConfirm">Cập nhật</button>
      </div>
    </div>
  </div>
</div>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> 
<script>
let myCvs = [];
function openUpdateCvModal(submissionId, currentCvId) {
    console.log('Opening update CV modal - SubmissionId:', submissionId, 'CurrentCvId:', currentCvId);
    
    // Lưu submissionId vào hidden input
    document.getElementById('updateSubmissionId').value = submissionId;
    
    // Gọi API lấy danh sách CV của user
    fetch('/Common/MyCVs?handler=List', { method: 'GET' })
        .then(res => {
            console.log('MyCVs API response status:', res.status);
            return res.json();
        })
        .then(data => {
            console.log('MyCVs data:', data);
            myCvs = data;
            let select = document.getElementById('selectNewCv');
            select.innerHTML = '';
            
            if (myCvs && myCvs.length > 0) {
                myCvs.forEach(cv => {
                    let option = document.createElement('option');
                    option.value = cv.cvId;
                    option.text = cv.cvName || cv.fileName;
                    if (cv.cvId == currentCvId) option.selected = true;
                    select.appendChild(option);
                });
            } else {
                console.log('No CVs found for user');
                let option = document.createElement('option');
                option.value = '';
                option.text = 'Không có CV nào';
                select.appendChild(option);
            }
            
            var modal = new bootstrap.Modal(document.getElementById('updateCvModal'));
            modal.show();
        })
        .catch(error => {
            console.error('Error loading CVs:', error);
            alert('Lỗi khi tải danh sách CV: ' + error.message);
        });
}
document.getElementById('btnUpdateCvConfirm').onclick = function() {
    let submissionId = document.getElementById('updateSubmissionId').value;
    let newCvId = document.getElementById('selectNewCv').value;
    if (!newCvId) { alert('Vui lòng chọn CV!'); return; }
    
    const requestData = { submissionId: parseInt(submissionId), newCvId: parseInt(newCvId), userId: parseInt(window.userId) };
    console.log('Sending update CV request:', requestData);
    console.log('JWT Token:', window.jwtToken ? 'Present' : 'Missing');
    
    if (!window.jwtToken) {
        alert('Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.');
        return;
    }
    
    // Gọi API cập nhật CV
    fetch('https://localhost:7004/api/AppliedJobs/update-cv', {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + window.jwtToken
        },
        body: JSON.stringify(requestData)
    })
    .then(res => {
        if (!res.ok) {
            return res.json().then(data => {
                throw new Error(data.message || 'Lỗi khi cập nhật CV!');
            });
        }
        return res.json();
    })
    .then(data => {
        alert(data.message || 'Cập nhật thành công!');
        location.reload();
    })
    .catch(error => {
        console.error('Error updating CV:', error);
        alert(error.message || 'Lỗi khi cập nhật CV!');
    });
};

function withdrawApplication(submissionId) {
    if (!confirm('Bạn chắc chắn muốn rút đơn ứng tuyển này?')) return;
    // Lấy userId từ biến toàn cục hoặc session
    fetch(`https://localhost:7004/api/AppliedJobs/withdraw/${submissionId}?userId=${window.userId}`, {
        method: 'DELETE',
        headers: {
            'Authorization': 'Bearer ' + window.jwtToken
        }
    })
    .then(res => res.json())
    .then(data => {
        alert(data.message || 'Đã rút đơn ứng tuyển!');
        location.reload();
    })
    .catch(() => alert('Lỗi khi rút đơn ứng tuyển!'));
}
</script> 