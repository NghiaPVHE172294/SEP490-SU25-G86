@page
@model SEP490_SU25_G86_Client.Pages.AppliedJobs.AppliedJobsModel
@{
    ViewData["Title"] = "Applied Jobs";
    var userId = HttpContext.Session.GetString("userId");
    var jwtToken = HttpContext.Session.GetString("jwt_token");
    var activeJobs = Model.AppliedJobs.Where(j => j.IsDelete == false || j.IsDelete == null).ToList();
}
<script>
    window.userId = '@userId';
    window.jwtToken = '@jwtToken';
</script>

<section class="container py-5">
    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2 class="h5 mb-0">Danh sách việc làm đã ứng tuyển</h2>
                    @{
                        var statusList = new List<string>
                        {
                            "Trạng thái",
                            "Đã ứng tuyển",
                            "Hồ sơ phù hợp",
                            "Hồ sơ không phù hợp",
                            "Hồ sơ đã rút"
                        };
                    }
                    <form method="get" class="d-inline">
                        <select class="form-select w-auto d-inline" name="StatusFilter" onchange="this.form.submit()">
                            @foreach (var status in statusList)
{
                            if (Model.StatusFilter == status)
                            {
                                <option value="@status" selected>@status</option>
                            }
                            else
                            {
                                <option value="@status">@status</option>
                            }
                        }
                        </select>
                    </form>
                </div>
                <div class="card-body">
                    @if (activeJobs.Any())
                    {
                        <div class="list-group">
                            @foreach (var job in activeJobs)
                            {
                                <div class="list-group-item list-group-item-action mb-3 rounded shadow-sm">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h5 class="mb-0">@job.Title</h5>
                                        @{
                                        string badgeClass = "bg-secondary";
                                        string statusText = (job.Status ?? "").Trim();
                                        switch (statusText)
                                        {
                                            case "OPEN":
                                                statusText = "Đã ứng tuyển";
                                                badgeClass = "bg-primary";
                                                break;
                                            case "Đã ứng tuyển":
                                                badgeClass = "bg-primary";
                                                break;
                                            case "Hồ sơ phù hợp":
                                                badgeClass = "bg-success";
                                                break;
                                            case "Hồ sơ không phù hợp":
                                                badgeClass = "bg-danger";
                                                break;
                                            case "Hồ sơ đã rút":
                                                badgeClass = "bg-dark";
                                                break;
                                        }
                                    }
<span class="badge @badgeClass">@statusText</span>
                                    </div>
                                    <p class="mb-1 text-muted"><strong>Địa điểm:</strong> @job.WorkLocation</p>
                                    <p class="mb-2 text-muted"><strong>Ngày ứng tuyển:</strong> @(job.SubmissionDate?.ToString("dd/MM/yyyy") ?? "N/A")</p>
                                    @if (job.CvId != null)
                                    {
                                       
                                    }
                                    <a href="/Job/DetailJobPost/@job.JobPostId" class="btn btn-primary btn-sm">Xem chi tiết</a>
@if (!string.IsNullOrEmpty(job.CvFileUrl))
{
    <a href="@job.CvFileUrl" class="btn btn-secondary btn-sm ms-2" target="_blank">Xem CV đã ứng tuyển</a>
}
else
{
    <span class="text-muted small ms-2">Không tìm thấy file CV</span>
}
                                    
                                    <button class="btn btn-danger btn-sm ms-2" onclick="withdrawApplication(@job.SubmissionId)">Rút đơn</button>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5 text-muted">
                            <p>Bạn chưa ứng tuyển công việc nào !</p>
                            <a href="/Common/ListJobs" class="btn btn-success mt-3">Tìm Việc Ngay</a>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Gợi ý việc làm phù hợp</h5>
                </div>
                <div class="card-body">
                    @if (Model.SuggestedJobs.Any())
                    {
                        @foreach (var job in Model.SuggestedJobs)
                        {
                            <a href="/Job/DetailJobPost/@job.JobPostId" class="text-decoration-none text-dark">
                                <div class="mb-3 p-2 border rounded d-flex align-items-center hover-shadow" style="transition:box-shadow .2s;">
                                    <div class="bg-light p-2 rounded me-3 d-flex align-items-center justify-content-center" style="min-width:80px; min-height:50px;">
                                        <span class="text-success fw-bold">@job.Salary</span>
                                    </div>
                                    <div style="flex:1;min-width:0;">
                                        <div class="fw-bold text-truncate">@job.Title</div>
                                        <div class="text-muted small text-truncate">@job.CompanyName</div>
                                    </div>
                                    <span class="ms-auto text-muted small d-none d-md-inline">@job.Location</span>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <div class="text-muted">Không có gợi ý việc làm phù hợp.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> 
<script>
function withdrawApplication(submissionId) {
    if (!confirm('Bạn chắc chắn muốn rút đơn ứng tuyển này?')) return;
    // Lấy userId từ biến toàn cục hoặc session
    fetch(`https://localhost:7004/api/AppliedJobs/withdraw/${submissionId}?userId=${window.userId}`, {
        method: 'DELETE',
        headers: {
            'Authorization': 'Bearer ' + window.jwtToken
        }
    })
    .then(res => res.json())
    .then(data => {
        alert(data.message || 'Đã rút đơn ứng tuyển!');
        location.reload();
    })
    .catch(() => alert('Lỗi khi rút đơn ứng tuyển!'));
}
</script> 